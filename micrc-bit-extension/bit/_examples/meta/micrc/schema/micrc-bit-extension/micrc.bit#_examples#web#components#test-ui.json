{
  "intro": {
    "version": "0.0.1",
    "state": "designing"
  },
  "comment": ["组件", "注释"],
  "types": {
    "definitions": {
      "DataType": {
        "interface": true,
        "props": {
          "key": "string",
          "name": "string",
          "age": "number",
          "address": "string",
          "tags": "string[]"
        }
      }
    },
    "imports": {
      "ReactNode": {
        "default": false,
        "packages": "react"
      },
      "ColumnsType": {
        "default": false,
        "packages": "antd/es/table"
      }
    }
  },
  "doc": {
    "title": "demo component",
    "labels": ["demo", "component"],
    "prototype": "https://xxxx/xxx"
  },
  "props": {
    "children?": "ReactNode",
    "columns?": "ColumnsType<DataType>",
    "data?": "DataType[]",
    "onSelect?": "(record, selected, selectedRows, nativeEvent)=> void",
    "onChange?": "(page, pageSize)=> void"
  },
  "defaultProps": {
    "children": null,
    "columns": [
      {
        "title": "Demo Title",
        "dataIndex": "p1",
        "key": "p1"
      },
      {
        "title": "Demo Action",
        "dataIndex": "p1",
        "key": "p1",
        "render": {
          "params": ["_", "record"],
          "assembly": {
            "assemblies": [
              {
                "name": "Button",
                "children": "{`Action1 -- ${record.p1}`}",
                "props": {
                  "type": "link"
                }
              },
              {
                "name": "Button",
                "children": "Action2",
                "props": {
                  "type": "link"
                }
              }
            ]
          }
        }
      }
    ],
    "data": [
      {
        "p1": "demo property"
      }
    ],
    "onSelect": {
      "params": ["param"],
      "alert": false
    },
    "onChange": {
      "params": ["param"],
      "alert": true
    }
  },
  "images": {
    "xxx": "https://xxxxx/xxxx/xx"
  },
  "stories": {
    "components": {
      "Table as AntTable": {
        "default": false,
        "packages": "antd"
      },
      "Button": {
        "default": false,
        "packages": "antd"
      }
    },
    "atoms": {
      "XXX": {
        "packages": "@micrc/bit._examples.atoms.test-ui",
        "version": "0.0.1"
      }
    },
    "examples": {
      "Test1": {
        "desc": "demo props usage",
        "props": {
          "p1": "",
          "p2": {},
          "p3": [],
          "p4": true,
          "p5": 1,
          "p6": {
            "params": ["_"],
            "alert": false
          },
          "p7": {
            "assemblies": [
              {
                "name": "Xxx",
                "children": null,
                "props": {}
              },
              {
                "name": "Yxx",
                "children": null,
                "props": {}
              }
            ]
          },
          "p8": [
            {
              "assemblies": [
                {
                  "name": "Xxx",
                  "children": null,
                  "props": {}
                }
              ]
            },
            {
              "assemblies": [
                {
                  "name": "Yyy",
                  "children": null,
                  "props": {}
                }
              ]
            }
          ]
        }
      }
    }
  },
  "components": {
    "Table as AntTable": {
      "default": false,
      "packages": "antd"
    },
    "Button": {
      "default": false,
      "packages": "antd"
    },
    "Card": {
      "default": false,
      "packages": "antd"
    },
    "Input": {
      "default": false,
      "packages": "antd"
    },
    "Modal": {
      "default": false,
      "packages": "antd"
    },
    "Pagination": {
      "default": true,
      "packages": "antd/lib/pagination"
    }
  },
  "atoms": {
    "XXX": {
      "packages": "@micrc/bit._examples/atoms/test-ui",
      "version": "0.0.1"
    }
  },
  "localState": {
    "show": {
      "value": false
    },
    "message": {
      "value": "initial value"
    },
    "columns": {
      "value": []
    }
  },
  "assembly": {
    "assemblies": [
      {
        "name": "Button",
        "children": "修改State",
        "props": {
          "onClick": "() => action([{op: 'replace', path: 'states@show:///value', value: true}])()",
          "type": "dashed"
        }
      },
      {
        "name": "AntTable",
        "children": null,
        "props": {
          "columns": "bind('states@columns:///value')",
          "dataSource": "bind('props:///data')"
        }
      },
      {
        "name": "Pagination",
        "children": null,
        "props": {
          "defaultCurrent": {
            "_val": 1
          },
          "total": {
            "_val": 50
          }
        }
      },
      {
        "name": "Modal",
        "children": {
          "assemblies": [
            {
              "name": "Card",
              "children": {
                "assemblies": [
                  {
                    "name": "Input",
                    "children": null,
                    "props": {}
                  },
                  {
                    "name": "Button",
                    "children": "{bind('states@message:///value')}",
                    "props": {
                      "type": "primary"
                    }
                  }
                ]
              },
              "props": {
                "title": "example card",
                "style": {
                  "_val": { "width": 300 }
                },
                "extra": {
                  "assemblies": [
                    {
                      "name": "Button",
                      "children": "More",
                      "props": {
                        "type": "link"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "props": {
          "title": "用这个modal模拟原子组件\"条件渲染\"",
          "visible": "bind('states@show:///value')",
          "onOk": "() => action([{op: 'replace', path: 'states@show:///value', value: false}])()",
          "onCancel": "() => action([{op: 'replace', path: 'states@show:///value', value: false}])()"
        }
      }
    ]
  }
}
